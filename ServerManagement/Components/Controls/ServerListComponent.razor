

<table class="table table-striped">
    <RepeaterComponent Items="servers">
        <Header>
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    City
                </th>
                <th>
                    Status
                </th>
                <th>
                    People Online
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        </Header>
        <Row Context="server">
            <ServerComponent Server="server"></ServerComponent>
        </Row>

    </RepeaterComponent>
</table>


@code {
    [Parameter]
    public string? CityName { get; set; }

    [Parameter]
    public string SearchFilter { get; set; } = "";

    private List<Server>? servers;

    protected override void OnParametersSet()
    {
        if (string.IsNullOrWhiteSpace(this.SearchFilter))
        {
            servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
        }
        else
        {
            servers = ServersRepository.SearchServers(this.SearchFilter);
        }

        var guid = Guid.NewGuid();
        Console.WriteLine($"{this.GetType().Name}: {nameof(OnParametersSet)} called. Guid: {guid}");
    }

    protected override bool ShouldRender()
    {
        var guid = Guid.NewGuid();
        Console.WriteLine($"{this.GetType().Name}: {nameof(ShouldRender)} called. Guid: {guid}");

        return base.ShouldRender();
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        var guid = Guid.NewGuid();
        Console.WriteLine($"{this.GetType().Name}: {nameof(SetParametersAsync)}:{guid}");

        return base.SetParametersAsync(parameters);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var guid = Guid.NewGuid();
        Console.WriteLine($"{this.GetType().Name}: {nameof(OnInitialized)} : {guid}");
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            // Init here
            if (string.IsNullOrWhiteSpace(this.SearchFilter))
            {
                servers = ServersRepository.GetServersByCity(CityName ?? "Toronto");
            }
            else
            {
                servers = ServersRepository.SearchServers(this.SearchFilter);
            }

            StateHasChanged();

            var guid = Guid.NewGuid();
            Console.WriteLine($"{this.GetType().Name}: {nameof(OnParametersSet)} called. Guid: {guid}");
        }
    }
}